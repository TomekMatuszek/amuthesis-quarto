# Source data {#sec-data}

Satellite imagery used in our model was downloaded from Landsat ARD dataset, provided by GLAD laboratory at the University of Maryland [@potapov2020]. Training points were obtained from LUCAS dataset created by Eurostat [@dandrimont2020]. This data was pre-processed and then used to train the model and validate its performance. Middle-West Poland was chosen as a training area for which satellite imagery and land cover data were downloaded (Figure [-@fig-rycina1]).

```{r}
#| label: fig-rycina1
#| echo: false
#| fig-cap: "Training area"
#| out-width: "100%"
#| out-height: 400px
knitr::include_graphics("figures/study_area.png")
```

## Satellite imagery {#sec-sat}

Satellite imagery from GLAD Landsat ARD is available in 16-day interval composites. Processing of original Landsat images included conversion of spectral bands to top-of-atmosphere (TOA) reflectance, conversion of thermal band to brightness temperature (BT) in Kelvins, scaling the values of all bands as well as adding quality flag for every pixel [@potapov2020]. The ARD dataset is divided into 1 x 1 geographic degrees tiles.

Satellite images for eight 1 x 1 degree tiles (Figure [-@fig-rycina1]) were downloaded using GLAD Tools v1.1 and PERL programming language.
All downloaded images were merged and reprojected from WGS84 coordinate reference system (EPSG:4326) to UTM zone 33N (EPSG:32633).
Every band was also resampled to 30 meters resolution.

-   preprocessing of satellite imagery performed by GLAD team from University of Maryland

-   process of downloading data using GLAD ARD software

-   GLAD ARD dataset structure

## Land cover data {#sec-landcover}

-   what is LUCAS programme and how its datasets are created

-   LUCAS Grid and LUCAS Micro Data

-   structure of LUCAS points dataset, description of relevant columns in addition to the land cover classification

-   processing of data in order to choose reliable training points; reclassification to chosen set of land cover categories

------------------------------------------------------------------------

Celem tego rozdziału jest przedstawienie użytych w pracy danych. Należy wyjaśnić jakie dane zostały użyte, jakiego są one rodzaju, dla jakiego okresu zostały pobrane/stworzone, co one zawierają, etc.

W tym rozdziale warto dodać ryciny i tabele przedstawiające użyte dane.

Zwróć uwagę, że poniższe bloki kodu mają parametr `#| echo: false`; oznacza to, że będą one niewidoczne w wynikowym pliku PDF. Każdy z bloków kodu musi mieć unikalną nazwę; w przypadku rycin powinna się ona rozpoczynać od prefiksu `fig-`. Dodanie podpisu pod rycinę odbywa się używając parametru `#| fig-cap:`. Następnie do tej ryciny można się odnieść używając operatora `[-@]`.

Podobnie wygląda odnoszenie się do plików graficznych. Tutaj wewnątrz bloku kodu należy użyć funkcji `knitr::include_graphics()` (Rycina [-@fig-rycina2]). Dodatkowo możliwa jest zmiana rozmiary obrazka używając parametrów takich jak `#| out-width:` i `#| out-height:`.

```{r}
#| label: fig-rycina2
#| echo: false
#| fig-cap: "Moja druga rycina"
#| out-width: "100%"
#| out-height: 300px
knitr::include_graphics("figures/rcookies.png")
```

Odnoszenie się do tabel odbywa się poprzez operator `[-@]` wraz z prefiksem `tbl-`. Natomiast tworzenie podpisu nad tabelą ma miejsce używając parametru `#| tbl-cap:`. Dodatkowo możliwe jest użycie pakietu **kableExtra** [@R-kableExtra] do określenia szerokości kolumn (Tabela [-@tbl-tabela1]).

```{r tabela1, echo=FALSE}
#| label: tbl-tabela1
#| echo: false
#| tbl-cap: "Moja pierwsza tabela"
df = data.frame(a = 1:5, b = letters[1:5])
knitr::kable(df, booktabs = TRUE) |> 
  kableExtra::column_spec(1, width = "2cm") |>  
  kableExtra::column_spec(2, width = "4cm")
```
